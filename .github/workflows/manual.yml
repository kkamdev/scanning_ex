# This is a basic workflow that is manually triggered
#to scan c++ code using SonarCloud

name: Manual Scanner workflow
    # Inputs the workflow accepts.
    
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API. 
#workflow_dispatch = Allows you to run this workflow manually from the Actions tab

on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1
      - name: dowwload sonar cloud client
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          wget -nv https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-linux.zip
          unzip -q sonar-scanner-cli-4.6.0.2311-linux.zip
          echo "${PWD}/sonar-scanner-4.6.0.2311-linux/bin/" >> $GITHUB_PATH
          wget -nv https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -q build-wrapper-linux-x86.zip
          echo "${PWD}/build-wrapper-linux-x86" >> $GITHUB_PATH
          
      - name: Install dependencies
        shell: bash
        run: sudo apt-get install -y scons libfftw3-dev libopenmpi-dev openmpi-bin libhdf5-dev python3-numpy python3-dev libtiff5-dev unzip

      - name: Compile Xmipp
        working-directory: ${{github.workspace}}
        shell: bash      
        run: |
          mkdir build
          cd build
          cmake ..
          cd ..          
          build-wrapper-linux-x86-64 --out-dir build_wrapper_output_directory cmake --build build/
          ls -l
          cd build_wrapper_output_directory
          ls -l

      - name: SonarCloud Scan
        working-directory: ${{github.workspace}}
        run: |
          sonar-scanner -X -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
